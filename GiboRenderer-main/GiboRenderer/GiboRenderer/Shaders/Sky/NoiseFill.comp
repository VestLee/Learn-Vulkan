#version 450
#extension GL_ARB_separate_shader_objects : enable


#define WORKGROUP_SIZE 1

layout(local_size_x=WORKGROUP_SIZE, local_size_y=WORKGROUP_SIZE, local_size_z=WORKGROUP_SIZE ) in;

layout(binding=1, rgba32f) uniform image3D OutputImage; //coherent restrict writeonly
layout(set = 0, binding=2) uniform sampler2D InputImage; 

//convert 2d texture slice image into a 3d image. so 2D image is 16384x128, turn that into a 128x128x128
void main()
{
	vec2 sampletexel = vec2(gl_GlobalInvocationID.z*128.0 + gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
	sampletexel.x = sampletexel.x / 16384.0;
	sampletexel.y = sampletexel.y / 128.0;

	vec4 pixel = texture(InputImage, sampletexel);
	
	imageStore(OutputImage, ivec3(gl_GlobalInvocationID.xyz), pixel);
}
